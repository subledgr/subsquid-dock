{
  "types": [
    {
      "minmax": [
        0,
        32
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Keys": "SessionKeys4",
        "Did": "[u8;32]",
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33"
          }
        },
        "DidSignature": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "KeyDetail": {
          "controller": "Did",
          "public_key": "PublicKey"
        },
        "KeyUpdate": {
          "did": "Did",
          "public_key": "PublicKey",
          "controller": "Option<Did>",
          "last_modified_in_block": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "last_modified_in_block": "BlockNumber"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "add_only": "bool"
        },
        "Revoke": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>",
          "last_modified": "BlockNumber"
        },
        "UnRevoke": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>",
          "last_modified": "BlockNumber"
        },
        "RemoveRegistry": {
          "registry_id": "RegistryId",
          "last_modified": "BlockNumber"
        },
        "PAuth": "BTreeMap<Did, DidSignature>",
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>",
          "author": "Did"
        },
        "EpochNo": "u32",
        "EpochLen": "u32",
        "SlotNo": "u64",
        "Balance": "u64",
        "EpochDetail": {
          "validator_count": "u8",
          "starting_slot": "SlotNo",
          "expected_ending_slot": "SlotNo",
          "ending_slot": "Option<SlotNo>",
          "emission_for_validators": "Option<Balance>",
          "emission_for_treasury": "Option<Balance>"
        },
        "ValidatorStatsPerEpoch": {
          "block_count": "EpochLen",
          "locked_reward": "Option<Balance>",
          "unlocked_reward": "Option<Balance>"
        },
        "Payload": {
          "proposal": "Vec<u8>",
          "round_no": "u64"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "vote_requirement": "u64"
        },
        "PMAuth": "BTreeMap<Did, DidSignature>",
        "Bonus": {
          "swap_bonuses": "Vec<(Balance, BlockNumber)>",
          "vesting_bonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "query_aggregator_call_encoded": "Vec<u8>",
          "query_price_abi_encoded": "Vec<u8>",
          "return_val_abi": "Vec<ParamType>"
        },
        "StateChange": {
          "_enum": {
            "KeyUpdate": "KeyUpdate",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "Blob": "Blob",
            "MasterVote": "Payload",
            "Attestation": "(Did, Attestation)"
          }
        }
      }
    },
    {
      "minmax": [
        33,
        35
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Keys": "SessionKeys4",
        "Did": "[u8;32]",
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33"
          }
        },
        "DidSignature": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "KeyDetail": {
          "controller": "Did",
          "public_key": "PublicKey"
        },
        "KeyUpdate": {
          "did": "Did",
          "public_key": "PublicKey",
          "controller": "Option<Did>",
          "last_modified_in_block": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "last_modified_in_block": "BlockNumber"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "add_only": "bool"
        },
        "Revoke": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>",
          "last_modified": "BlockNumber"
        },
        "UnRevoke": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>",
          "last_modified": "BlockNumber"
        },
        "RemoveRegistry": {
          "registry_id": "RegistryId",
          "last_modified": "BlockNumber"
        },
        "PAuth": "BTreeMap<Did, DidSignature>",
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>",
          "author": "Did"
        },
        "EpochNo": "u32",
        "EpochLen": "u32",
        "SlotNo": "u64",
        "Balance": "u64",
        "EpochDetail": {
          "validator_count": "u8",
          "starting_slot": "SlotNo",
          "expected_ending_slot": "SlotNo",
          "ending_slot": "Option<SlotNo>",
          "emission_for_validators": "Option<Balance>",
          "emission_for_treasury": "Option<Balance>"
        },
        "ValidatorStatsPerEpoch": {
          "block_count": "EpochLen",
          "locked_reward": "Option<Balance>",
          "unlocked_reward": "Option<Balance>"
        },
        "Payload": {
          "proposal": "Vec<u8>",
          "round_no": "u64"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "vote_requirement": "u64"
        },
        "PMAuth": "BTreeMap<Did, DidSignature>",
        "Bonus": {
          "swap_bonuses": "Vec<(Balance, BlockNumber)>",
          "vesting_bonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "query_aggregator_call_encoded": "Vec<u8>",
          "query_price_abi_encoded": "Vec<u8>",
          "return_val_abi": "Vec<ParamType>"
        },
        "CurveType": {
          "_enum": {
            "Bls12381": null
          }
        },
        "ParametersStorageKey": "(Did, u32)",
        "PublicKeyStorageKey": "(Did, u32)",
        "BbsPlusParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "BbsPlusPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<ParametersStorageKey>"
        },
        "BbsPlusPublicKeyWithParams": "(BbsPlusPublicKey, Option<BbsPlusParameters>)",
        "AccumulatorId": "[u8;32]",
        "AccumulatorParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "AccumulatorPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<ParametersStorageKey>"
        },
        "AccumulatorPublicKeyWithParams": "(AccumulatorPublicKey, Option<AccumulatorParameters>)",
        "AccumulatorCommon": {
          "accumulated": "Vec<u8>",
          "key_ref": "PublicKeyStorageKey"
        },
        "UniversalAccumulator": {
          "common": "AccumulatorCommon",
          "max_size": "u64"
        },
        "Accumulator": {
          "_enum": {
            "Positive": "AccumulatorCommon",
            "Universal": "UniversalAccumulator"
          }
        },
        "AddAccumulator": {
          "id": "AccumulatorId",
          "accumulator": "Accumulator"
        },
        "RemoveAccumulator": {
          "id": "AccumulatorId",
          "created_at": "BlockNumber",
          "nonce": "u32"
        },
        "AccumulatorUpdate": {
          "id": "AccumulatorId",
          "new_accumulated": "Vec<u8>",
          "additions": "Option<Vec<Vec<u8>>>",
          "removals": "Option<Vec<Vec<u8>>>",
          "witness_update_info": "Option<Vec<u8>>",
          "created_at": "BlockNumber",
          "nonce": "u32"
        },
        "StateChange": {
          "_enum": {
            "KeyUpdate": "KeyUpdate",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "Blob": "Blob",
            "MasterVote": "Payload",
            "Attestation": "(Did, Attestation)",
            "AddBBSPlusParams": "BbsPlusParameters",
            "AddBBSPlusPublicKey": "BbsPlusPublicKey",
            "RemoveBBSPlusParams": "ParametersStorageKey",
            "RemoveBBSPlusPublicKey": "PublicKeyStorageKey",
            "AddAccumulatorParams": "AccumulatorParameters",
            "AddAccumulatorPublicKey": "AccumulatorPublicKey",
            "RemoveAccumulatorParams": "ParametersStorageKey",
            "RemoveAccumulatorPublicKey": "PublicKeyStorageKey",
            "AddAccumulator": "AddAccumulator",
            "UpdateAccumulator": "AccumulatorUpdate",
            "RemoveAccumulator": "RemoveAccumulator"
          }
        }
      }
    },
    {
      "minmax": [
        36,
        36
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "Keys": "SessionKeys4",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "WrappedBytes": "Vec<u8>",
        "IncId": "u32",
        "RawDid": "[u8;32]",
        "Did": "RawDid",
        "Attester": "Did",
        "BlobOwner": "Did",
        "Controller": "Did",
        "BBSPlusParamsOwner": "Did",
        "AccumulatorOwner": "Did",
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33",
            "X25519": "Bytes32"
          }
        },
        "SigValue": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "DidSignature": {
          "did": "Did",
          "keyId": "IncId",
          "sig": "SigValue"
        },
        "OffChainDidDocRef": {
          "_enum": {
            "CID": "WrappedBytes",
            "URL": "WrappedBytes",
            "Custom": "WrappedBytes"
          }
        },
        "OffChainDidDetails": {
          "accountId": "AccountId",
          "docRef": "OffChainDidDocRef"
        },
        "OnChainDidDetails": {
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredOnChainDidDetails": {
          "nonce": "BlockNumber",
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredDidDetails": {
          "_enum": {
            "OffChain": "OffChainDidDetails",
            "OnChain": "StoredOnChainDidDetails"
          }
        },
        "VerRelType": "u16",
        "ServiceEndpointType": "u16",
        "ServiceEndpoint": {
          "types": "ServiceEndpointType",
          "origins": "Vec<WrappedBytes>"
        },
        "DidKey": {
          "publicKey": "PublicKey",
          "verRels": "VerRelType"
        },
        "AddKeys": {
          "did": "Did",
          "keys": "Vec<DidKey>",
          "nonce": "BlockNumber"
        },
        "RemoveKeys": {
          "did": "Did",
          "keys": "BTreeSet<IncId>",
          "nonce": "BlockNumber"
        },
        "AddControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "RemoveControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "AddServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint",
          "nonce": "BlockNumber"
        },
        "RemoveServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "nonce": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "nonce": "BlockNumber"
        },
        "AggregatedDidDetailsRequestParams": "u8",
        "DidKeyWithId": {
          "id": "IncId",
          "key": "DidKey"
        },
        "ServiceEndpointWithId": {
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint"
        },
        "AggregatedDidDetailsResponse": {
          "id": "Did",
          "details": "StoredDidDetails",
          "keys": "Option<Vec<DidKeyWithId>>",
          "controllers": "Option<Vec<Controller>>",
          "serviceEndpoints": "Option<Vec<ServiceEndpointWithId>>"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "add_only": "bool"
        },
        "AddRegistry": {
          "id": "RegistryId",
          "registry": "Registry"
        },
        "RevokeRaw": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "UnRevokeRaw": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "RemoveRegistryRaw": {
          "registry_id": "RegistryId"
        },
        "Revoke": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "UnRevoke": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "RemoveRegistry": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId"
        },
        "DidSigs": {
          "sig": "DidSignature",
          "nonce": "BlockNumber"
        },
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>"
        },
        "AddBlob": {
          "blob": "Blob",
          "nonce": "BlockNumber"
        },
        "Balance": "u64",
        "BlockNumber": "u32",
        "Bonus": {
          "swap_bonuses": "Vec<(Balance, BlockNumber)>",
          "vesting_bonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "MasterVote": {
          "nonce": "BlockNumber",
          "proposal": "Vec<u8>",
          "round_no": "u64"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "vote_requirement": "u64"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "SetAttestationClaim": {
          "attest": "Attestation",
          "nonce": "BlockNumber"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "query_aggregator_call_encoded": "Vec<u8>",
          "query_price_abi_encoded": "Vec<u8>",
          "return_val_abi": "Vec<ParamType>"
        },
        "CurveType": {
          "_enum": {
            "Bls12381": null
          }
        },
        "BBSPlusParametersStorageKey": "(BBSPlusParamsOwner, IncId)",
        "BBSPlusPublicKeyStorageKey": "(Controller, IncId)",
        "BbsPlusParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "BbsPlusPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<BBSPlusParametersStorageKey>"
        },
        "BbsPlusPublicKeyWithParams": "(BbsPlusPublicKey, Option<BbsPlusParameters>)",
        "AddBBSPlusParams": {
          "params": "BbsPlusParameters",
          "nonce": "BlockNumber"
        },
        "AddBBSPlusPublicKey": {
          "key": "BbsPlusPublicKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusParams": {
          "params_ref": "BBSPlusParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusPublicKey": {
          "key_ref": "BBSPlusPublicKeyStorageKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "AccumulatorId": "[u8;32]",
        "AccumParametersStorageKey": "(AccumulatorOwner, IncId)",
        "AccumPublicKeyStorageKey": "(AccumulatorOwner, IncId)",
        "AccumulatorParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "AccumulatorPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<AccumParametersStorageKey>"
        },
        "AccumPublicKeyWithParams": "(AccumulatorPublicKey, Option<AccumulatorParameters>)",
        "AccumulatorCommon": {
          "accumulated": "Vec<u8>",
          "key_ref": "AccumPublicKeyStorageKey"
        },
        "UniversalAccumulator": {
          "common": "AccumulatorCommon",
          "max_size": "u64"
        },
        "Accumulator": {
          "_enum": {
            "Positive": "AccumulatorCommon",
            "Universal": "UniversalAccumulator"
          }
        },
        "StoredAccumulatorOwnerCounters": {
          "params_counter": "IncId",
          "key_counter": "IncId"
        },
        "AddAccumulatorParams": {
          "params": "AccumulatorParameters",
          "nonce": "BlockNumber"
        },
        "AddAccumulatorPublicKey": {
          "public_key": "AccumulatorPublicKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorParams": {
          "params_ref": "AccumParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorPublicKey": {
          "key_ref": "AccumPublicKeyStorageKey",
          "nonce": "BlockNumber"
        },
        "AddAccumulator": {
          "id": "AccumulatorId",
          "accumulator": "Accumulator",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulator": {
          "id": "AccumulatorId",
          "nonce": "BlockNumber"
        },
        "AccumulatorWithUpdateInfo": {
          "created_at": "BlockNumber",
          "last_updated_at": "BlockNumber",
          "accumulator": "Accumulator"
        },
        "UpdateAccumulator": {
          "id": "AccumulatorId",
          "new_accumulated": "Vec<u8>",
          "additions": "Option<Vec<Vec<u8>>>",
          "removals": "Option<Vec<Vec<u8>>>",
          "witness_update_info": "Option<Vec<u8>>",
          "nonce": "BlockNumber"
        },
        "StateChange": {
          "_enum": {
            "AddKeys": "AddKeys",
            "AddControllers": "AddControllers",
            "RemoveKeys": "RemoveKeys",
            "RemoveControllers": "RemoveControllers",
            "AddServiceEndpoint": "AddServiceEndpoint",
            "RemoveServiceEndpoint": "RemoveServiceEndpoint",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "AddBlob": "AddBlob",
            "MasterVote": "MasterVote",
            "SetAttestationClaim": "SetAttestationClaim",
            "AddBBSPlusParams": "AddBBSPlusParams",
            "AddBBSPlusPublicKey": "AddBBSPlusPublicKey",
            "RemoveBBSPlusParams": "RemoveBBSPlusParams",
            "RemoveBBSPlusPublicKey": "RemoveBBSPlusPublicKey",
            "AddAccumulatorParams": "AddAccumulatorParams",
            "AddAccumulatorPublicKey": "AddAccumulatorPublicKey",
            "RemoveAccumulatorParams": "RemoveAccumulatorParams",
            "RemoveAccumulatorPublicKey": "RemoveAccumulatorPublicKey",
            "AddAccumulator": "AddAccumulator",
            "UpdateAccumulator": "UpdateAccumulator",
            "RemoveAccumulator": "RemoveAccumulator"
          }
        }
      }
    },
    {
      "minmax": [
        37,
        37
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "Keys": "SessionKeys4",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "WrappedBytes": "Vec<u8>",
        "IncId": "u32",
        "RawDid": "[u8;32]",
        "Did": "RawDid",
        "Attester": "Did",
        "BlobOwner": "Did",
        "Controller": "Did",
        "BBSPlusParamsOwner": "Did",
        "AccumulatorOwner": "Did",
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33",
            "X25519": "Bytes32"
          }
        },
        "SigValue": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "DidSignature": {
          "did": "Did",
          "keyId": "IncId",
          "sig": "SigValue"
        },
        "OffChainDidDocRef": {
          "_enum": {
            "CID": "WrappedBytes",
            "URL": "WrappedBytes",
            "Custom": "WrappedBytes"
          }
        },
        "OffChainDidDetails": {
          "accountId": "AccountId",
          "docRef": "OffChainDidDocRef"
        },
        "OnChainDidDetails": {
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredOnChainDidDetails": {
          "nonce": "BlockNumber",
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredDidDetails": {
          "_enum": {
            "OffChain": "OffChainDidDetails",
            "OnChain": "StoredOnChainDidDetails"
          }
        },
        "VerRelType": "u16",
        "ServiceEndpointType": "u16",
        "ServiceEndpoint": {
          "types": "ServiceEndpointType",
          "origins": "Vec<WrappedBytes>"
        },
        "DidKey": {
          "publicKey": "PublicKey",
          "verRels": "VerRelType"
        },
        "AddKeys": {
          "did": "Did",
          "keys": "Vec<DidKey>",
          "nonce": "BlockNumber"
        },
        "RemoveKeys": {
          "did": "Did",
          "keys": "BTreeSet<IncId>",
          "nonce": "BlockNumber"
        },
        "AddControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "RemoveControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "AddServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint",
          "nonce": "BlockNumber"
        },
        "RemoveServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "nonce": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "nonce": "BlockNumber"
        },
        "AggregatedDidDetailsRequestParams": "u8",
        "DidKeyWithId": {
          "id": "IncId",
          "key": "DidKey"
        },
        "ServiceEndpointWithId": {
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint"
        },
        "AggregatedDidDetailsResponse": {
          "did": "Did",
          "details": "StoredDidDetails",
          "keys": "Option<Vec<DidKeyWithId>>",
          "controllers": "Option<Vec<Controller>>",
          "serviceEndpoints": "Option<Vec<ServiceEndpointWithId>>",
          "attestation": "Option<Attestation>"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "add_only": "bool"
        },
        "AddRegistry": {
          "id": "RegistryId",
          "registry": "Registry"
        },
        "RevokeRaw": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "UnRevokeRaw": {
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "RemoveRegistryRaw": {
          "registry_id": "RegistryId"
        },
        "Revoke": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "UnRevoke": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId",
          "revoke_ids": "BTreeSet<RevokeId>"
        },
        "RemoveRegistry": {
          "nonce": "BlockNumber",
          "registry_id": "RegistryId"
        },
        "DidSigs": {
          "sig": "DidSignature",
          "nonce": "BlockNumber"
        },
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>"
        },
        "AddBlob": {
          "blob": "Blob",
          "nonce": "BlockNumber"
        },
        "Balance": "u64",
        "BlockNumber": "u32",
        "Bonus": {
          "swap_bonuses": "Vec<(Balance, BlockNumber)>",
          "vesting_bonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "MasterVote": {
          "nonce": "BlockNumber",
          "proposal": "Vec<u8>",
          "round_no": "u64"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "vote_requirement": "u64"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "SetAttestationClaim": {
          "attest": "Attestation",
          "nonce": "BlockNumber"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "query_aggregator_call_encoded": "Vec<u8>",
          "query_price_abi_encoded": "Vec<u8>",
          "return_val_abi": "Vec<ParamType>"
        },
        "CurveType": {
          "_enum": {
            "Bls12381": null
          }
        },
        "BBSPlusParametersStorageKey": "(BBSPlusParamsOwner, IncId)",
        "BBSPlusPublicKeyStorageKey": "(Controller, IncId)",
        "BBSPlusParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "BBSPlusPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<BBSPlusParametersStorageKey>"
        },
        "BBSPlusPublicKeyWithParams": "(BBSPlusPublicKey, Option<BbsPlusParameters>)",
        "AddBBSPlusParams": {
          "params": "BBSPlusParameters",
          "nonce": "BlockNumber"
        },
        "AddBBSPlusPublicKey": {
          "key": "BBSPlusPublicKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusParams": {
          "params_ref": "BBSPlusParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusPublicKey": {
          "key_ref": "BBSPlusPublicKeyStorageKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "AccumulatorId": "[u8;32]",
        "AccumParametersStorageKey": "(AccumulatorOwner, IncId)",
        "AccumPublicKeyStorageKey": "(AccumulatorOwner, IncId)",
        "AccumulatorParameters": {
          "label": "Option<Vec<u8>>",
          "curve_type": "CurveType",
          "bytes": "Vec<u8>"
        },
        "AccumulatorPublicKey": {
          "curve_type": "CurveType",
          "bytes": "Vec<u8>",
          "params_ref": "Option<AccumParametersStorageKey>"
        },
        "AccumPublicKeyWithParams": "(AccumulatorPublicKey, Option<AccumulatorParameters>)",
        "AccumulatorCommon": {
          "accumulated": "Vec<u8>",
          "key_ref": "AccumPublicKeyStorageKey"
        },
        "UniversalAccumulator": {
          "common": "AccumulatorCommon",
          "max_size": "u64"
        },
        "Accumulator": {
          "_enum": {
            "Positive": "AccumulatorCommon",
            "Universal": "UniversalAccumulator"
          }
        },
        "StoredAccumulatorOwnerCounters": {
          "params_counter": "IncId",
          "key_counter": "IncId"
        },
        "AddAccumulatorParams": {
          "params": "AccumulatorParameters",
          "nonce": "BlockNumber"
        },
        "AddAccumulatorPublicKey": {
          "public_key": "AccumulatorPublicKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorParams": {
          "params_ref": "AccumParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorPublicKey": {
          "key_ref": "AccumPublicKeyStorageKey",
          "nonce": "BlockNumber"
        },
        "AddAccumulator": {
          "id": "AccumulatorId",
          "accumulator": "Accumulator",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulator": {
          "id": "AccumulatorId",
          "nonce": "BlockNumber"
        },
        "AccumulatorWithUpdateInfo": {
          "created_at": "BlockNumber",
          "last_updated_at": "BlockNumber",
          "accumulator": "Accumulator"
        },
        "UpdateAccumulator": {
          "id": "AccumulatorId",
          "new_accumulated": "Vec<u8>",
          "additions": "Option<Vec<Vec<u8>>>",
          "removals": "Option<Vec<Vec<u8>>>",
          "witness_update_info": "Option<Vec<u8>>",
          "nonce": "BlockNumber"
        },
        "StorageVersion": {
          "_enum": {
            "SingleKey": null,
            "MultiKey": null
          }
        },
        "StateChange": {
          "_enum": {
            "AddKeys": "AddKeys",
            "AddControllers": "AddControllers",
            "RemoveKeys": "RemoveKeys",
            "RemoveControllers": "RemoveControllers",
            "AddServiceEndpoint": "AddServiceEndpoint",
            "RemoveServiceEndpoint": "RemoveServiceEndpoint",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "AddBlob": "AddBlob",
            "MasterVote": "MasterVote",
            "SetAttestationClaim": "SetAttestationClaim",
            "AddBBSPlusParams": "AddBBSPlusParams",
            "AddBBSPlusPublicKey": "AddBBSPlusPublicKey",
            "RemoveBBSPlusParams": "RemoveBBSPlusParams",
            "RemoveBBSPlusPublicKey": "RemoveBBSPlusPublicKey",
            "AddAccumulatorParams": "AddAccumulatorParams",
            "AddAccumulatorPublicKey": "AddAccumulatorPublicKey",
            "RemoveAccumulatorParams": "RemoveAccumulatorParams",
            "RemoveAccumulatorPublicKey": "RemoveAccumulatorPublicKey",
            "AddAccumulator": "AddAccumulator",
            "UpdateAccumulator": "UpdateAccumulator",
            "RemoveAccumulator": "RemoveAccumulator"
          }
        }
      }
    },
    {
      "minmax": [
        38,
        38
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "Keys": "SessionKeys4",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "WrappedBytes": "Vec<u8>",
        "IncId": "u32",
        "RawDid": "[u8;32]",
        "Did": "RawDid",
        "Attester": "Did",
        "BlobOwner": "Did",
        "Controller": "Did",
        "BBSPlusParamsOwner": "Did",
        "AccumulatorOwner": "Did",
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33",
            "X25519": "Bytes32"
          }
        },
        "DispatchError": "DispatchErrorPre6",
        "SigValue": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "DidSignature": {
          "did": "Did",
          "keyId": "IncId",
          "sig": "SigValue"
        },
        "OffChainDidDocRef": {
          "_enum": {
            "CID": "WrappedBytes",
            "URL": "WrappedBytes",
            "Custom": "WrappedBytes"
          }
        },
        "OffChainDidDetails": {
          "accountId": "AccountId",
          "docRef": "OffChainDidDocRef"
        },
        "StoredOnChainDidDetails": {
          "nonce": "BlockNumber",
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredDidDetails": {
          "_enum": {
            "OffChain": "OffChainDidDetails",
            "OnChain": "StoredOnChainDidDetails"
          }
        },
        "VerRelType": "u16",
        "ServiceEndpointType": "u16",
        "ServiceEndpoint": {
          "types": "ServiceEndpointType",
          "origins": "Vec<WrappedBytes>"
        },
        "DidKey": {
          "publicKey": "PublicKey",
          "verRels": "VerRelType"
        },
        "AddKeys": {
          "did": "Did",
          "keys": "Vec<DidKey>",
          "nonce": "BlockNumber"
        },
        "RemoveKeys": {
          "did": "Did",
          "keys": "BTreeSet<IncId>",
          "nonce": "BlockNumber"
        },
        "AddControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "RemoveControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "AddServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint",
          "nonce": "BlockNumber"
        },
        "RemoveServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "nonce": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "nonce": "BlockNumber"
        },
        "AggregatedDidDetailsRequestParams": "u8",
        "DidKeyWithId": {
          "id": "IncId",
          "key": "DidKey"
        },
        "ServiceEndpointWithId": {
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint"
        },
        "AggregatedDidDetailsResponse": {
          "id": "Did",
          "details": "StoredDidDetails",
          "keys": "Option<Vec<DidKeyWithId>>",
          "controllers": "Option<Vec<Controller>>",
          "attestation": "Option<Attestation>",
          "serviceEndpoints": "Option<Vec<ServiceEndpointWithId>>"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "addOnly": "bool"
        },
        "AddRegistry": {
          "id": "RegistryId",
          "newRegistry": "Registry"
        },
        "RevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "UnRevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "RemoveRegistryRaw": {
          "registryId": "RegistryId"
        },
        "Revoke": {
          "nonce": "BlockNumber",
          "data": "RevokeRaw"
        },
        "UnrevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "UnRevoke": {
          "nonce": "BlockNumber",
          "data": "UnrevokeRaw"
        },
        "RemoveRegistry": {
          "nonce": "BlockNumber",
          "data": "RemoveRegistryRaw"
        },
        "DidSigs": {
          "sig": "DidSignature",
          "nonce": "BlockNumber"
        },
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>"
        },
        "AddBlob": {
          "blob": "Blob",
          "nonce": "BlockNumber"
        },
        "Balance": "u64",
        "BlockNumber": "u32",
        "Bonus": {
          "swapBonuses": "Vec<(Balance, BlockNumber)>",
          "vestingBonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "MasterVoteRaw": {
          "proposal": "Vec<u8>",
          "roundNo": "u64"
        },
        "MasterVote": {
          "nonce": "BlockNumber",
          "data": "MasterVoteRaw"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "voteRequirement": "u64"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "SetAttestationClaim": {
          "attest": "Attestation",
          "nonce": "BlockNumber"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "queryAggregatorCallEncoded": "Vec<u8>",
          "queryPriceAbiEncoded": "Vec<u8>",
          "returnValAbi": "Vec<ParamType>"
        },
        "CurveType": {
          "_enum": {
            "Bls12381": null
          }
        },
        "BBSPlusParametersStorageKey": "(BBSPlusParamsOwner, IncId)",
        "BBSPlusPublicKeyStorageKey": "(Controller, IncId)",
        "BBSPlusParameters": {
          "label": "Option<Vec<u8>>",
          "curveType": "CurveType",
          "bytes": "Vec<u8>"
        },
        "BBSPlusPublicKey": {
          "curveType": "CurveType",
          "bytes": "Vec<u8>",
          "paramsRef": "Option<BBSPlusParametersStorageKey>"
        },
        "BBSPlusPublicKeyWithParams": "(BBSPlusPublicKey, Option<BBSPlusParameters>)",
        "AddBBSPlusParams": {
          "params": "BBSPlusParameters",
          "nonce": "BlockNumber"
        },
        "AddBBSPlusPublicKey": {
          "key": "BBSPlusPublicKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusParams": {
          "paramsRef": "BBSPlusParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusPublicKey": {
          "keyRef": "BBSPlusPublicKeyStorageKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "AccumulatorId": "[u8;32]",
        "AccumParametersStorageKey": "(AccumulatorOwner, IncId)",
        "AccumPublicKeyStorageKey": "(AccumulatorOwner, IncId)",
        "AccumulatorParameters": {
          "label": "Option<Vec<u8>>",
          "curveType": "CurveType",
          "bytes": "Vec<u8>"
        },
        "AccumulatorPublicKey": {
          "curveType": "CurveType",
          "bytes": "Vec<u8>",
          "paramsRef": "Option<AccumParametersStorageKey>"
        },
        "AccumPublicKeyWithParams": "(AccumulatorPublicKey, Option<AccumulatorParameters>)",
        "AccumulatorCommon": {
          "accumulated": "Vec<u8>",
          "keyRef": "AccumPublicKeyStorageKey"
        },
        "UniversalAccumulator": {
          "common": "AccumulatorCommon",
          "maxSize": "u64"
        },
        "Accumulator": {
          "_enum": {
            "Positive": "AccumulatorCommon",
            "Universal": "UniversalAccumulator"
          }
        },
        "StoredAccumulatorOwnerCounters": {
          "paramsCounter": "IncId",
          "keyCounter": "IncId"
        },
        "AddAccumulatorParams": {
          "params": "AccumulatorParameters",
          "nonce": "BlockNumber"
        },
        "AddAccumulatorPublicKey": {
          "publicKey": "AccumulatorPublicKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorParams": {
          "paramsRef": "AccumParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorPublicKey": {
          "keyRef": "AccumPublicKeyStorageKey",
          "nonce": "BlockNumber"
        },
        "AddAccumulator": {
          "id": "AccumulatorId",
          "accumulator": "Accumulator",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulator": {
          "id": "AccumulatorId",
          "nonce": "BlockNumber"
        },
        "AccumulatorWithUpdateInfo": {
          "createdAt": "BlockNumber",
          "lastUpdatedAt": "BlockNumber",
          "accumulator": "Accumulator"
        },
        "UpdateAccumulator": {
          "id": "AccumulatorId",
          "newAccumulated": "Vec<u8>",
          "additions": "Option<Vec<Vec<u8>>>",
          "removals": "Option<Vec<Vec<u8>>>",
          "witnessUpdateInfo": "Option<Vec<u8>>",
          "nonce": "BlockNumber"
        },
        "StateChange": {
          "_enum": {
            "AddKeys": "AddKeys",
            "AddControllers": "AddControllers",
            "RemoveKeys": "RemoveKeys",
            "RemoveControllers": "RemoveControllers",
            "AddServiceEndpoint": "AddServiceEndpoint",
            "RemoveServiceEndpoint": "RemoveServiceEndpoint",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "AddBlob": "AddBlob",
            "MasterVote": "MasterVote",
            "SetAttestationClaim": "SetAttestationClaim",
            "AddBBSPlusParams": "AddBBSPlusParams",
            "AddBBSPlusPublicKey": "AddBBSPlusPublicKey",
            "RemoveBBSPlusParams": "RemoveBBSPlusParams",
            "RemoveBBSPlusPublicKey": "RemoveBBSPlusPublicKey",
            "AddAccumulatorParams": "AddAccumulatorParams",
            "AddAccumulatorPublicKey": "AddAccumulatorPublicKey",
            "RemoveAccumulatorParams": "RemoveAccumulatorParams",
            "RemoveAccumulatorPublicKey": "RemoveAccumulatorPublicKey",
            "AddAccumulator": "AddAccumulator",
            "UpdateAccumulator": "UpdateAccumulator",
            "RemoveAccumulator": "RemoveAccumulator"
          }
        }
      }
    },
    {
      "minmax": [
        39,
        43
      ],
      "types": {
        "Address": "MultiAddress",
        "LookupSource": "MultiAddress",
        "Keys": "SessionKeys4",
        "PerDispatchClassU32": {
          "normal": "u32",
          "operational": "u32",
          "mandatory": "u32"
        },
        "BlockLength": {
          "max": "PerDispatchClassU32"
        },
        "Bytes32": {
          "value": "[u8;32]"
        },
        "Bytes33": {
          "value": "[u8;33]"
        },
        "Bytes64": {
          "value": "[u8;64]"
        },
        "Bytes65": {
          "value": "[u8;65]"
        },
        "WrappedBytes": "Vec<u8>",
        "IncId": "u32",
        "RawDid": "[u8;32]",
        "Did": "RawDid",
        "Attester": "Did",
        "BlobOwner": "Did",
        "Controller": "Did",
        "BBSPlusParamsOwner": "Did",
        "AccumulatorOwner": "Did",
        "PublicKey": {
          "_enum": {
            "Sr25519": "Bytes32",
            "Ed25519": "Bytes32",
            "Secp256k1": "Bytes33",
            "X25519": "Bytes32"
          }
        },
        "DispatchError": "DispatchErrorPre6",
        "SigValue": {
          "_enum": {
            "Sr25519": "Bytes64",
            "Ed25519": "Bytes64",
            "Secp256k1": "Bytes65"
          }
        },
        "DidSignature": {
          "did": "Did",
          "keyId": "IncId",
          "sig": "SigValue"
        },
        "OffChainDidDocRef": {
          "_enum": {
            "CID": "WrappedBytes",
            "URL": "WrappedBytes",
            "Custom": "WrappedBytes"
          }
        },
        "OffChainDidDetails": {
          "accountId": "AccountId",
          "docRef": "OffChainDidDocRef"
        },
        "StoredOnChainDidDetails": {
          "nonce": "BlockNumber",
          "lastKeyId": "IncId",
          "activeControllerKeys": "u32",
          "activeControllers": "u32"
        },
        "StoredDidDetails": {
          "_enum": {
            "OffChain": "OffChainDidDetails",
            "OnChain": "StoredOnChainDidDetails"
          }
        },
        "HighRateRewardsState": {
          "_enum": {
            "None": null,
            "StartingInNextEra": "HighRateRewardsStartingInNextEra",
            "Active": "HighRateRewardsActive"
          }
        },
        "HighRateRewardsStartingInNextEra": {
          "duration": "u16"
        },
        "HighRateRewardsActive": {
          "endsAfter": "u16"
        },
        "VerRelType": "u16",
        "ServiceEndpointType": "u16",
        "ServiceEndpoint": {
          "types": "ServiceEndpointType",
          "origins": "Vec<WrappedBytes>"
        },
        "DidKey": {
          "publicKey": "PublicKey",
          "verRels": "VerRelType"
        },
        "AddKeys": {
          "did": "Did",
          "keys": "Vec<DidKey>",
          "nonce": "BlockNumber"
        },
        "RemoveKeys": {
          "did": "Did",
          "keys": "BTreeSet<IncId>",
          "nonce": "BlockNumber"
        },
        "AddControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "RemoveControllers": {
          "did": "Did",
          "controllers": "BTreeSet<Controller>",
          "nonce": "BlockNumber"
        },
        "AddServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint",
          "nonce": "BlockNumber"
        },
        "RemoveServiceEndpoint": {
          "did": "Did",
          "id": "WrappedBytes",
          "nonce": "BlockNumber"
        },
        "DidRemoval": {
          "did": "Did",
          "nonce": "BlockNumber"
        },
        "AggregatedDidDetailsRequestParams": "u8",
        "DidKeyWithId": {
          "id": "IncId",
          "key": "DidKey"
        },
        "ServiceEndpointWithId": {
          "id": "WrappedBytes",
          "endpoint": "ServiceEndpoint"
        },
        "AggregatedDidDetailsResponse": {
          "id": "Did",
          "details": "StoredDidDetails",
          "keys": "Option<Vec<DidKeyWithId>>",
          "controllers": "Option<Vec<Controller>>",
          "attestation": "Option<Attestation>",
          "serviceEndpoints": "Option<Vec<ServiceEndpointWithId>>"
        },
        "RegistryId": "[u8;32]",
        "RevokeId": "[u8;32]",
        "Registry": {
          "policy": "Policy",
          "addOnly": "bool"
        },
        "AddRegistry": {
          "id": "RegistryId",
          "newRegistry": "Registry"
        },
        "RevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "UnRevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "RemoveRegistryRaw": {
          "registryId": "RegistryId"
        },
        "Revoke": {
          "nonce": "BlockNumber",
          "data": "RevokeRaw"
        },
        "UnrevokeRaw": {
          "registryId": "RegistryId",
          "revokeIds": "BTreeSet<RevokeId>"
        },
        "UnRevoke": {
          "nonce": "BlockNumber",
          "data": "UnrevokeRaw"
        },
        "RemoveRegistry": {
          "nonce": "BlockNumber",
          "data": "RemoveRegistryRaw"
        },
        "DidSigs": {
          "sig": "DidSignature",
          "nonce": "BlockNumber"
        },
        "Policy": {
          "_enum": {
            "OneOf": "BTreeSet<Did>"
          }
        },
        "BlobId": "[u8;32]",
        "Blob": {
          "id": "BlobId",
          "blob": "Vec<u8>"
        },
        "AddBlob": {
          "blob": "Blob",
          "nonce": "BlockNumber"
        },
        "Balance": "u64",
        "BlockNumber": "u32",
        "Bonus": {
          "swapBonuses": "Vec<(Balance, BlockNumber)>",
          "vestingBonuses": "Vec<(Balance, Balance, BlockNumber)>"
        },
        "MasterVoteRaw": {
          "proposal": "Vec<u8>",
          "roundNo": "u64"
        },
        "MasterVote": {
          "nonce": "BlockNumber",
          "data": "MasterVoteRaw"
        },
        "Membership": {
          "members": "BTreeSet<Did>",
          "voteRequirement": "u64"
        },
        "Attestation": {
          "priority": "Compact<u64>",
          "iri": "Option<Vec<u8>>"
        },
        "SetAttestationClaim": {
          "attest": "Attestation",
          "nonce": "BlockNumber"
        },
        "ParamType": {
          "_enum": {
            "Address": null,
            "Int": "u16",
            "Uint": "u16"
          }
        },
        "ContractConfig": {
          "address": "H160",
          "queryAggregatorCallEncoded": "Vec<u8>",
          "queryPriceAbiEncoded": "Vec<u8>",
          "returnValAbi": "Vec<ParamType>"
        },
        "CurveType": {
          "_enum": {
            "Bls12381": null
          }
        },
        "BBSPlusParametersStorageKey": "(BBSPlusParamsOwner, IncId)",
        "BBSPlusPublicKeyStorageKey": "(Controller, IncId)",
        "BBSPlusParameters": {
          "label": "Option<Vec<u8>>",
          "curveType": "CurveType",
          "bytes": "Vec<u8>"
        },
        "BBSPlusPublicKey": {
          "curveType": "CurveType",
          "bytes": "Vec<u8>",
          "paramsRef": "Option<BBSPlusParametersStorageKey>"
        },
        "BBSPlusPublicKeyWithParams": "(BBSPlusPublicKey, Option<BBSPlusParameters>)",
        "AddBBSPlusParams": {
          "params": "BBSPlusParameters",
          "nonce": "BlockNumber"
        },
        "AddBBSPlusPublicKey": {
          "key": "BBSPlusPublicKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusParams": {
          "paramsRef": "BBSPlusParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveBBSPlusPublicKey": {
          "keyRef": "BBSPlusPublicKeyStorageKey",
          "did": "Controller",
          "nonce": "BlockNumber"
        },
        "AccumulatorId": "[u8;32]",
        "AccumParametersStorageKey": "(AccumulatorOwner, IncId)",
        "AccumPublicKeyStorageKey": "(AccumulatorOwner, IncId)",
        "AccumulatorParameters": {
          "label": "Option<Vec<u8>>",
          "curveType": "CurveType",
          "bytes": "Vec<u8>"
        },
        "AccumulatorPublicKey": {
          "curveType": "CurveType",
          "bytes": "Vec<u8>",
          "paramsRef": "Option<AccumParametersStorageKey>"
        },
        "AccumPublicKeyWithParams": "(AccumulatorPublicKey, Option<AccumulatorParameters>)",
        "AccumulatorCommon": {
          "accumulated": "Vec<u8>",
          "keyRef": "AccumPublicKeyStorageKey"
        },
        "UniversalAccumulator": {
          "common": "AccumulatorCommon",
          "maxSize": "u64"
        },
        "Accumulator": {
          "_enum": {
            "Positive": "AccumulatorCommon",
            "Universal": "UniversalAccumulator"
          }
        },
        "StoredAccumulatorOwnerCounters": {
          "paramsCounter": "IncId",
          "keyCounter": "IncId"
        },
        "AddAccumulatorParams": {
          "params": "AccumulatorParameters",
          "nonce": "BlockNumber"
        },
        "AddAccumulatorPublicKey": {
          "publicKey": "AccumulatorPublicKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorParams": {
          "paramsRef": "AccumParametersStorageKey",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulatorPublicKey": {
          "keyRef": "AccumPublicKeyStorageKey",
          "nonce": "BlockNumber"
        },
        "AddAccumulator": {
          "id": "AccumulatorId",
          "accumulator": "Accumulator",
          "nonce": "BlockNumber"
        },
        "RemoveAccumulator": {
          "id": "AccumulatorId",
          "nonce": "BlockNumber"
        },
        "AccumulatorWithUpdateInfo": {
          "createdAt": "BlockNumber",
          "lastUpdatedAt": "BlockNumber",
          "accumulator": "Accumulator"
        },
        "UpdateAccumulator": {
          "id": "AccumulatorId",
          "newAccumulated": "Vec<u8>",
          "additions": "Option<Vec<Vec<u8>>>",
          "removals": "Option<Vec<Vec<u8>>>",
          "witnessUpdateInfo": "Option<Vec<u8>>",
          "nonce": "BlockNumber"
        },
        "StateChange": {
          "_enum": {
            "AddKeys": "AddKeys",
            "AddControllers": "AddControllers",
            "RemoveKeys": "RemoveKeys",
            "RemoveControllers": "RemoveControllers",
            "AddServiceEndpoint": "AddServiceEndpoint",
            "RemoveServiceEndpoint": "RemoveServiceEndpoint",
            "DidRemoval": "DidRemoval",
            "Revoke": "Revoke",
            "UnRevoke": "UnRevoke",
            "RemoveRegistry": "RemoveRegistry",
            "AddBlob": "AddBlob",
            "MasterVote": "MasterVote",
            "SetAttestationClaim": "SetAttestationClaim",
            "AddBBSPlusParams": "AddBBSPlusParams",
            "AddBBSPlusPublicKey": "AddBBSPlusPublicKey",
            "RemoveBBSPlusParams": "RemoveBBSPlusParams",
            "RemoveBBSPlusPublicKey": "RemoveBBSPlusPublicKey",
            "AddAccumulatorParams": "AddAccumulatorParams",
            "AddAccumulatorPublicKey": "AddAccumulatorPublicKey",
            "RemoveAccumulatorParams": "RemoveAccumulatorParams",
            "RemoveAccumulatorPublicKey": "RemoveAccumulatorPublicKey",
            "AddAccumulator": "AddAccumulator",
            "UpdateAccumulator": "UpdateAccumulator",
            "RemoveAccumulator": "RemoveAccumulator"
          }
        }
      }
    }
  ],
  "rpc": {
    "poa": {
      "treasuryAccount": {
        "description": "Return account address of treasury. The account address can then be used to query the chain for balance",
        "params": [],
        "type": "AccountId"
      },
      "treasuryBalance": {
        "description": "Return free balance of treasury account. In the context of PoA, only free balance makes sense for treasury. But just in case, to check all kinds of balance (locked, reserved, etc), get the account address with above call and query the chain.",
        "params": [],
        "type": "Balance"
      },
      "getTotalEmissionInEpoch": {
        "description": "Return total (validators + treasury) emission rewards for given epoch",
        "params": [
          "EpochNo"
        ],
        "type": "Balance"
      }
    },
    "price_feed": {
      "tokenUsdPrice": {
        "description": "Gets the price of Dock/USD from pallet's storage",
        "params": [],
        "type": "Option<u32>"
      },
      "tokenUsdPriceFromContract": {
        "description": "Gets the price of Dock/USD from EVM contract",
        "params": [],
        "type": "Option<u32>"
      }
    },
    "fiat_filter": {
      "getCallFeeDock": {
        "description": "Accepts a scale-encoded extrinsic, returns fee in µDOCK as Balance (u64)",
        "params": [
          "Bytes"
        ],
        "type": "Balance"
      }
    },
    "core_mods": {
      "psPublicKeyWithParams": {
        "description": "Return PS public key with params",
        "params": [
          {
            "name": "id",
            "type": "(Did, IncId)"
          }
        ],
        "type": "Option<(PsPublicKey, Option<PsParameters>)>"
      },
      "psParamsByDid": {
        "description": "Return all PS params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, PsParameters>"
      },
      "psPublicKeysByDid": {
        "description": "Return all PS key with params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, (PsPublicKey, Option<PsParameters>)>"
      },
      "bbsPublicKeyWithParams": {
        "description": "Return BBS public key with params",
        "params": [
          {
            "name": "id",
            "type": "(Did, IncId)"
          }
        ],
        "type": "Option<(BbsPublicKey, Option<BbsParameters>)>"
      },
      "bbsParamsByDid": {
        "description": "Return all BBS params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, BbsParameters>"
      },
      "bbsPublicKeysByDid": {
        "description": "Return all BBS key with params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, (BbsPublicKey, Option<BbsParameters>)>"
      },
      "bbsPlusPublicKeyWithParams": {
        "description": "Return BBS+ public key with params",
        "params": [
          {
            "name": "id",
            "type": "(Did, IncId)"
          }
        ],
        "type": "Option<(BbsPlusPublicKey, Option<BbsPlusParameters>)>"
      },
      "bbsPlusParamsByDid": {
        "description": "Return all BBS+ params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, BbsPlusParameters>"
      },
      "bbsPlusPublicKeysByDid": {
        "description": "Return all BBS+ key with params by a DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          }
        ],
        "type": "BTreeMap<IncId, (BbsPlusPublicKey, Option<BbsPlusParameters>)>"
      },
      "accumulatorPublicKeyWithParams": {
        "description": "Return Accumulator public key with params",
        "params": [
          {
            "name": "id",
            "type": "AccumPublicKeyStorageKey"
          }
        ],
        "type": "Option<AccumPublicKeyWithParams>"
      },
      "accumulatorWithPublicKeyAndParams": {
        "description": "Return Accumulator public key with params",
        "params": [
          {
            "name": "id",
            "type": "AccumulatorId"
          }
        ],
        "type": "Option<(Vec<u8>, Option<AccumPublicKeyWithParams>)>"
      },
      "didDetails": {
        "description": "Get all keys, controllers and service endpoints of the DID",
        "params": [
          {
            "name": "did",
            "type": "Did"
          },
          {
            "name": "params",
            "type": "u8",
            "isOptional": true
          }
        ],
        "type": "Option<AggregatedDidDetailsResponse>"
      },
      "didListDetails": {
        "description": "Get all keys, controllers and service endpoints of the DID",
        "params": [
          {
            "name": "dids",
            "type": "Vec<Did>"
          },
          {
            "name": "params",
            "type": "u8",
            "isOptional": true
          }
        ],
        "type": "Vec<Option<AggregatedDidDetailsResponse>>"
      }
    },
    "staking_rewards": {
      "yearlyEmission": {
        "description": "",
        "params": [
          {
            "name": "total_staked",
            "type": "Balance"
          },
          {
            "name": "total_issuance",
            "type": "Balance"
          }
        ],
        "type": "Balance"
      },
      "maxYearlyEmission": {
        "description": "",
        "params": [],
        "type": "Balance"
      }
    }
  }
}
